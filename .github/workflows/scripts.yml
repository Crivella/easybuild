name: Tests for scripts
on: [push, pull_request]
jobs:
  scripts:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        repo: [easybuild-framework, easybuild-easyblocks, easybuild-easyconfigs, easybuild]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v1
      with:
        python-version: 3.8
    - name: install EasyBuild (framework-only)
      run: |
        pip install easybuild-framework
        eb --version
    - name: clone repo
      run: |
        cd $HOME
        git clone https://github.com/easybuilders/${{matrix.repo}}.git
    - name: test create_source_tarball.sh script
      run: |
        cd $HOME/${{matrix.repo}}
        git checkout master

        # file to figure out the version from depends on repo
        if [[ ${{matrix.repo}} == "easybuild-framework" ]]; then
            version_file=easybuild/tools/version.py
        elif [[ ${{matrix.repo}} == "easybuild-easyblocks" ]]; then
            version_file=easybuild/easyblocks/__init__.py
        else
            version_file=setup.py
        fi
        version=$(grep '^VERSION' $version_file | sed 's/[^0-9]*\([0-9a-zA-Z.]*\).*/\1/g')
        echo "${{matrix.repo}} version: $version"

        echo "testing with '$GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version'"

        out=$HOME/out.txt
        
        echo "================================================================================================"

        # check use of script outside correct directory
        cd $HOME
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Expected to be in ${{matrix.repo}} directory" $out
        echo "Expected error found in output: OK!"
        
        echo "================================================================================================"

        cd ${{matrix.repo}}

        # script should make sure we're on master branch
        git checkout develop &> /dev/null
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Not on master branch" $out
        echo "Expected error found in output: OK!"
        git checkout master &> /dev/null

        echo "================================================================================================"

        # specified version should match with current version
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} 0.0.0 2>&1 | tee $out) || true
        grep "ERROR: Found version '${version}'" $out
        echo "Expected error found in output: OK!"

        echo "================================================================================================"

        # existing source tarball in dist should result in an error
        mkdir -p dist
        touch dist/${{matrix.repo}}-${version}.tar.gz
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Found dist/${{matrix.repo}}-${version}.tar.gz" $out
        echo "Expected error found in output: OK!"
        rm dist/${{matrix.repo}}-${version}.tar.gz
        
        echo "================================================================================================"

        # check for error when script is run in a dirty working copy
        touch dirty.txt
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Working directory not clean" $out
        echo "Expected error found in output: OK!"
        rm dirty.txt
        
        echo "================================================================================================"

        # script should fail if expected source tarball did not get created in dist/
        mkdir -p /tmp/$USER/bin
        echo '#!/bin/bash' > /tmp/$USER/bin/python
        chmod u+x /tmp/$USER/bin/python
        export PATH=/tmp/$USER/bin:$PATH
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Expected file dist/${{matrix.repo}}-${version}.tar.gz not found!" $out
        echo "Expected error found in output: OK!"
        
        echo "================================================================================================"

        # script should deal well with failing 'python setup.py sdist'
        echo 'exit 1' >> /tmp/$USER/bin/python
        ($GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out) || true
        grep "ERROR: Creating source tarball failed" $out
        echo "Expected error found in output: OK!"
        rm /tmp/$USER/bin/python
        
        echo "================================================================================================"

        # check use of script in correct way, should yield "SUCCESS" in output
        $GITHUB_WORKSPACE/scripts/create_source_tarball.sh ${{matrix.repo}} $version 2>&1 | tee $out
        grep SUCCESS $out
        # no errors in output
        errors=$(grep ERROR $out || true)
        if [ ! -z $errors ]; then "Errors found: $errors"; fi

        echo "Correct run of script OK!"
